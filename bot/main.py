import asyncio
from datetime import datetime
import json
import logging

from aiogram import Bot, Dispatcher, F
from aiogram.client.default import DefaultBotProperties
from aiogram.types import *
from aiogram.enums.parse_mode import ParseMode
from aiogram.utils.keyboard import ReplyKeyboardBuilder
from aiogram.filters import Command

from actions import register_handlers_actions
from admin import add_user
from bot import bot, dp
from config import TOKEN
from keyboards import *


@dp.message(lambda message: message.text in ['/start', '–ù–∞–∑–∞–¥', '–ú–µ–Ω—é', '–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', '–ù–∞–∑–∞–¥ ‚Ü©Ô∏è'])
async def start(message: Message):

    user_id = message.from_user.id
    name = message.from_user.username

    add_user(user_id, name)

    greeting = ''
    match datetime.now().hour:
        case 0 | 1 | 2 | 3 | 4:
            greeting = '–î–æ–±—Ä–æ–π –Ω–æ—á–∏'
        case 5 | 6 | 7 | 8 | 9 | 10 | 11:
            greeting = '–î–æ–±—Ä–æ–µ —É—Ç—Ä–æ'
        case 12 | 13 | 14 | 15 | 16:
            greeting = '–î–æ–±—Ä—ã–π –¥–µ–Ω—å'
        case 17 | 18 | 19 | 20 | 21 | 22 | 23:
            greeting = '–î–æ–±—Ä—ã–π –≤–µ—á–µ—Ä'

    await message.answer(
        f'{greeting}! –≠—Ç–æ—Ç –±–æ—Ç –ø–æ–º–æ–∂–µ—Ç –≤–∞–º –æ—Å–≤–æ–∏—Ç—Å—è –≤ –Ω–æ–≤–æ–π —à–∫–æ–ª–µ –∏–ª–∏ —á—É–≤—Å—Ç–≤–æ–≤–∞—Ç—å —Å–µ–±—è —É–≤–µ—Ä–µ–Ω–Ω–µ–µ –≤ –ø—Ä–∏–≤—ã—á–Ω–æ–π '
        f'–æ–±—Å—Ç–∞–Ω–æ–≤–∫–µ',
        reply_markup=main_menu_keyboard().as_markup(resize_keyboard=True)
    )


# –ú–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è
register_handlers_actions()


@dp.message(F.text == '–®–∫–æ–ª–∞ üè´')
async def school_menu(message: Message):

    lessons_button = KeyboardButton(text='–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ —É—Ä–æ–∫–æ–≤ üìÜ')
    rings_button = KeyboardButton(text='–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∑–≤–æ–Ω–∫–æ–≤ üîî')
    food_button = KeyboardButton(text='–°—Ç–æ–ª–æ–≤–∞—è üçΩÔ∏è')
    main_menu_button = KeyboardButton(text='–ù–∞–∑–∞–¥ ‚Ü©Ô∏è')

    keyboard = ReplyKeyboardBuilder()
    keyboard.row(
        lessons_button,
        rings_button,
        food_button,
        main_menu_button,
        width=1
    )

    await message.answer(
        '–≠—Ç–æ —Ä–∞–∑–¥–µ–ª —Å –∂–∏–∑–Ω—å—é —à–∫–æ–ª—ã. –ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ —É–∑–Ω–∞—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ —É—Ä–æ–∫–æ–≤, –∑–≤–æ–Ω–∫–æ–≤, –∞ —Ç–∞–∫ –∂–µ –º–µ–Ω—é '
        '–≤ —à–∫–æ–ª—å–Ω–æ–π —Å—Ç–æ–ª–æ–≤–æ–π',
        reply_markup=keyboard.as_markup(resize_keyboard=True)
    )


if __name__ == '__main__':
    logging.warning('BOT POLLING')
    logging.warning('TG: @sviblovo_school_bot')
    logging.warning('BOT POLLING')
    dp.run_polling(bot, skip_updates=True)
