from aiogram import F
from aiogram.filters import StateFilter
from aiogram.types import *
from aiogram.fsm.context import FSMContext
from aiogram.utils.keyboard import ReplyKeyboardBuilder

from admin import add_action_to_db
from bot import dp
from keyboards import main_menu_keyboard
from states import AddActionStates


async def actions(message: Message):

    active_votings_button = KeyboardButton(text='–ì–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è üìä')
    schedule_button = KeyboardButton(text='–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π üìÜ')
    ask_an_action_button = KeyboardButton(text='–ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ üí¨')
    back_button = KeyboardButton(text='–ù–∞–∑–∞–¥ ‚Ü©Ô∏è')

    keyboard = ReplyKeyboardBuilder()
    keyboard.row(
        active_votings_button,
        schedule_button,
        ask_an_action_button,
        back_button,
        width=1
    )

    await message.answer(
        '–≠—Ç–æ –º–µ–Ω—é –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π, –∑–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –ø—Ä–æ–≥–æ–ª–æ—Å–æ–≤–∞—Ç—å –∑–∞ –ø—Ä–æ–≤–µ–¥–µ–Ω–∏–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è, –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å '
        '—Å–≤–æ—ë, –∞ —Ç–∞–∫–∂–µ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ —É–∂–µ –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω—ã—Ö –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–µ–π –≤ —à–∫–æ–ª–µ.',
        reply_markup=keyboard.as_markup(resize_keyboard=True)
    )


async def add_action(message: Message, state: FSMContext):

    kb = ReplyKeyboardRemove()

    await message.answer('–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è: ', reply_markup=kb)

    await state.set_state(AddActionStates.action_name)


async def add_action_name(message: Message, state: FSMContext):

    await state.update_data(name=message.text)

    await message.answer('–¢–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ –î–î.–ú–ú.–ì–ì–ì–ì: ')

    await state.set_state(AddActionStates.action_date)


async def add_action_date(message: Message, state: FSMContext):

    await state.update_data(date=message.text)

    await message.answer('–¢–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è: ')

    await state.set_state(AddActionStates.action_description)


async def add_action_descriprion(message: Message, state: FSMContext):

    await state.update_data(description=message.text)

    data = await state.get_data()

    await state.clear()

    action = {
        'date': data["date"],
        'description': data["description"],
        'status': 'pending'
    }

    add_action_to_db(data["name"], action)

    # ToDo: –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∞–º

    await message.answer('–ì–æ—Ç–æ–≤–æ!', reply_markup=main_menu_keyboard().as_markup(resize_keyboard=True))


def register_handlers_actions():
    dp.message.register(actions, F.text == '–ú–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è üìå')
    dp.message.register(add_action, F.text == '–ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ üí¨')
    dp.message.register(add_action_name, StateFilter(AddActionStates.action_name))
    dp.message.register(add_action_date, StateFilter(AddActionStates.action_date))
    dp.message.register(add_action_descriprion, StateFilter(AddActionStates.action_description))
